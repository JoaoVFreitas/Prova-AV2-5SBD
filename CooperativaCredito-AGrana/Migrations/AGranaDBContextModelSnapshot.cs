// <auto-generated />
using System;
using CooperativaCredito_AGrana.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CooperativaCredito_AGrana.Migrations
{
    [DbContext(typeof(AGranaDBContext))]
    partial class AGranaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.AssociadoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("FinanciamentoId")
                        .HasColumnType("int");

                    b.Property<float>("LimiteEndividamentoMensal")
                        .HasColumnType("real");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("NomeLimpo")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<float>("Salario")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FinanciamentoId")
                        .IsUnique()
                        .HasFilter("[FinanciamentoId] IS NOT NULL");

                    b.ToTable("Associados");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.ComissaoEmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("FinanciamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ParcelasPagas")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.HasIndex("FinanciamentoId");

                    b.ToTable("ComissoesEmpresa");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.ComissaoVendedorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FinanciamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ParcelasPagas")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinanciamentoId");

                    b.HasIndex("VendedorId")
                        .IsUnique();

                    b.ToTable("ComissoesVendedor");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComissaoEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComissaoEmpresaId")
                        .IsUnique()
                        .HasFilter("[ComissaoEmpresaId] IS NOT NULL");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.FinanciamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<string>("BemDuravel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Juros")
                        .HasColumnType("real");

                    b.Property<float>("PorcentagemSalario")
                        .HasColumnType("real");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId")
                        .IsUnique();

                    b.HasIndex("VendedorId");

                    b.ToTable("Financiamentos");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.VendedorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComissaoVendedorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComissaoVendedorId")
                        .IsUnique()
                        .HasFilter("[ComissaoVendedorId] IS NOT NULL");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.AssociadoModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.EmpresaModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaCredito_AGrana.Models.FinanciamentoModel", "Financiamento")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.AssociadoModel", "FinanciamentoId");

                    b.Navigation("Empresa");

                    b.Navigation("Financiamento");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.ComissaoEmpresaModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.EmpresaModel", "Empresa")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.ComissaoEmpresaModel", "EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaCredito_AGrana.Models.FinanciamentoModel", "Financiamento")
                        .WithMany()
                        .HasForeignKey("FinanciamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Financiamento");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.ComissaoVendedorModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.FinanciamentoModel", "Financiamento")
                        .WithMany()
                        .HasForeignKey("FinanciamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaCredito_AGrana.Models.VendedorModel", "Vendedor")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.ComissaoVendedorModel", "VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Financiamento");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.EmpresaModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.ComissaoEmpresaModel", "ComissaoEmpresa")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.EmpresaModel", "ComissaoEmpresaId");

                    b.Navigation("ComissaoEmpresa");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.FinanciamentoModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.AssociadoModel", "Associado")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.FinanciamentoModel", "AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaCredito_AGrana.Models.VendedorModel", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("CooperativaCredito_AGrana.Models.VendedorModel", b =>
                {
                    b.HasOne("CooperativaCredito_AGrana.Models.ComissaoVendedorModel", "ComissaoVendedor")
                        .WithOne()
                        .HasForeignKey("CooperativaCredito_AGrana.Models.VendedorModel", "ComissaoVendedorId");

                    b.Navigation("ComissaoVendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
